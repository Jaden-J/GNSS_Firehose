# This is the template file for creating symbols with tragesym
# every line starting with '#' is a comment line.

[options]
# wordswap swaps labels if the pin is on the right side an looks like this:
#   "PB1 (CLK)". That's useful for micro controller port labels
# rotate_labels rotates the pintext of top and bottom pins
#   this is useful for large symbols like FPGAs with more than 100 pins
# sort_labels will sort the pins by it's labels
#   useful for address ports, busses, ...
wordswap=yes
rotate_labels=yes
sort_labels=yes
generate_pinseq=yes
sym_width=4200
pinwidthvertical=200
pinwidthhorizontal=200

[geda_attr]
# name will be printed in the top of the symbol
# name is only some graphical text, not an attribute
# version specifies a gschem version.
# if you have a device with slots, you'll have to use slot= and slotdef=
# use comment= if there are special information you want to add
version=20060113 1
name=
device=LMK03806
refdes=U?
footprint=LLP64_EP
description=TI LMK03806 Clock Generator
documentation=
author=
dist-license=
use-license=
numslots=0
#slot=1
#slotdef=1:
#slotdef=2:
#slotdef=3:
#slotdef=4:
#comment=
#comment=
#comment=

[pins]
# tabseparated list of pin descriptions
# ----------------------------------------
# pinnr is the physical number of the pin
# seq is the pinseq= attribute, leave it blank if it doesn't matter
# type can be (in, out, io, oc, oe, pas, tp, tri, clk, pwr)
# style can be (line,dot,clk,dotclk,spacer,none). none if only want to add a net
# posit. can be (l,r,t,b) or empty for nets.
# net specifies the name of the net. Vcc or GND for example.
# label represents the pinlabel.
#	negation lines can be added with "\_" example: \_enable\_ 
#	if you want to write a "\" use "\\" as escape sequence
#-----------------------------------------------------
#pinnr	seq	type	style	posit.	net	label	
#-----------------------------------------------------
1		pas	line	l		CLKout0
2		pas	line	l		CLKout0*
3		pas	line	l		CLKout1*
4		pas	line	l		CLKout1
#5		pas	line			NC
6		pas	line	r		SYNC
#7		pas	line			NC
#8		pas	line			NC
#9		pas	line			NC
10		pas	line	t		Vcc1
11		pas	line	r		LDObyp1
12		pas	line	r		LDObyp2
13		pas	line	l		CLKout2
14		pas	line	l		CLKout2*
15		pas	line	l		CLKout3*
16		pas	line	l		CLKout3
17		pas	line	t		Vcc2
18		pas	line	t		Vcc3
19		pas	line	l		CLKout4
20		pas	line	l		CLKout4*
21		pas	line	l		CLKout5*
22		pas	line	l		CLKout5
23		pas	line	b		GND
24		pas	line	t		Vcc4
#25		pas	line			NC
#26		pas	line			NC
27		pas	line	r		Readback
#28		pas	line			NC
#29		pas	line			NC
30		pas	line	t		Vcc5
31		pas	line	l		OSCout1
32		pas	line	l		OSCout1*
33		pas	line	r		Ftest/LD
#34		pas	line			NC
35		pas	line	t		Vcc6
36		pas	line	l		OSCin
37		pas	line	l		OSCin*
38		pas	line	t		Vcc7
39		pas	line	l		OSCout0
40		pas	line	l		OSCout0*
41		pas	line	t		Vcc8
42		pas	line	r		CPout
43		pas	line	t		Vcc9
44		pas	line	l		LEuWire
45		pas	line	l		CLKuWire
46		pas	line	l		DATAuWire
47		pas	line	t		Vcc10
48		pas	line	r		CLKout6
49		pas	line	r		CLKout6*
50		pas	line	r		CLKout7*
51		pas	line	r		CLKout7
52		pas	line	t		Vcc11
53		pas	line	r		CLKout8
54		pas	line	r		CLKout8*
55		pas	line	r		CLKout9*
56		pas	line	r		CLKout9
57		pas	line	t		Vcc12
58		pas	line	r		CLKout10
59		pas	line	r		CLKout10*
60		pas	line	r		CLKout11*
61		pas	line	r		CLKout11
62		pas	line	r		GPout0
63		pas	line	r		GPout1
64		pas	line	t		Vcc13
65		pas	line	b		GND
